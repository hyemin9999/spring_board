spring.application.name=sbb

#live reload
spring.devtools.livereload.enabled=true
#spring.devtools.restart.enabled=true

##spring.freemarker.cache=false

# H2 데이터베이스 설정
# 인메모리 모드 (애플리케이션 실행 시에만 데이터 유지)
# spring.datasource.url=jdbc:h2:mem:testdb 
# 파일 기반 임베디드 모드 (지정된 경로에 데이터 저장)
# 사전에 수동으로 생성 'local.mv.db', 추후 자동 생성됨
# 
spring.datasource.url=jdbc:h2:~/local
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 콘솔 설정 (선택 사항)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
# 'update' --> 개발시 일반적으로 사용, 프로젝트 완료 후 변경 --> vaildate
spring.jpa.hibernate.ddl-auto=update

##sql_log
## Hibernate가 DB에 수행하는 모든 쿼리문을 콘솔에 출력
#spring.jpa.properties.hibernate.show_sql=true
## 로그, 콘솔의 SQL을 이쁘게 출력
#spring.jpa.properties.hibernate.format_sql=true
## SQL 출력을 ANSI escape codes 를 사용하여 색을 부여
#spring.jpa.properties.hibernate.highlight_sql=true
## 보다 쉬운 디버깅을 위해 SQL 내부에 /* */ 주석을 추가
spring.jpa.properties.hibernate.use_sql_comments=true

##logging.level.org.hibernate.SQL=debug
##logging.level.org.hibernate.type=trace
##logging.level.org.hibernate.type.descriptor.sql=trace
## sql 검색값 보여주기
##logging.level.org.hibernate.orm.jdbc.bind=trace


# Thymeleaf 템플릿 경로 및 확장자 설정
spring.thymeleaf.cache=false 
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

## css
#spring.mvc.static-path-pattern=/resources/static/**

## sql 검색 결과값 보여주기
#
#logging.level.org.hibernate.orm.jdbc.extract=trace



# p6spy log
decorator.datasource.p6spy.enable-logging=true
